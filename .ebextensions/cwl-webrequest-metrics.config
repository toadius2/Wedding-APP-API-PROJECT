
Mappings:
  CWLogs:
    WebRequestLogGroup:
      LogFile: "/var/log/nginx/access.log"
      TimestampFormat: "%d/%b/%Y:%H:%M:%S %z"
    WebNodeLogGroup:
      LogFile: "/var/log/nodejs/nodejs.log"
    WebNodeInfoLogGroup:
      LogFile: "/var/log/nodejs/info.log"
    WebDatabaseLogGroup:
      LogFile: "/var/log/nodejs/db_access.log"
    FilterPatterns:
      Http4xxMetricFilter: "[..., status=4*, size, referer, agent, xforward, time]"  
      HttpNon4xxMetricFilter: "[..., status!=4*, size, referer, agent, xforward, time]"
      Http5xxMetricFilter: "[..., status=5*, size, referer, agent, xforward, time]"  
      NginxErrorMetricFilter: "[date, time, type != *warn*, ...]"
      NodeErrorMetricFilter: "{ $.error.isCritical IS TRUE }"
    Extractions:
      QueryDurationValueExtraction: "{ ($.params.time = *) }"

Resources :
  LGAccess:
    Type: "AWS::Logs::LogGroup"
    DependsOn: AWSEBBeanstalkMetadata
    DeletionPolicy: Retain     ## this is required
    Properties:
      LogGroupName: {"Fn::Join":[".", [{ "Ref":"AWSEBEnvironmentName" }, "access.log"]]}
      RetentionInDays: 150
  LGNodeInfo:
    Type: "AWS::Logs::LogGroup"
    DependsOn: AWSEBBeanstalkMetadata
    DeletionPolicy: Retain     ## this is required
    Properties:
      LogGroupName: {"Fn::Join":[".", [{ "Ref":"AWSEBEnvironmentName" }, "node_info.log"]]}
      RetentionInDays: 150
  LGDatabase:
    Type: "AWS::Logs::LogGroup"
    DependsOn: AWSEBBeanstalkMetadata
    DeletionPolicy: Retain     ## this is required
    Properties:
      LogGroupName: {"Fn::Join":[".", [{ "Ref":"AWSEBEnvironmentName" }, "database.log"]]}
      RetentionInDays: 150


  ## Register the files/log groups for monitoring
  AWSEBAutoScalingGroup:
    Metadata:
      "AWS::CloudFormation::Init":
        CWLogsAgentConfigSetup:
          files:
            ## any .conf file put into /tmp/cwlogs/conf.d will be added to the cwlogs config (see cwl-agent.config)
            "/tmp/cwlogs/conf.d/nginx-access.conf":
              content : |
                [nginx-access_log]
                file = `{"Fn::FindInMap":["CWLogs", "WebRequestLogGroup", "LogFile"]}`
                log_group_name = `{ "Ref" : "LGAccess" }`
                log_stream_name = {instance_id}
                datetime_format = `{"Fn::FindInMap":["CWLogs", "WebRequestLogGroup", "TimestampFormat"]}`
              mode  : "000400"
              owner : root
              group : root
            "/tmp/cwlogs/conf.d/nodejs.conf":
              content : |
                [nodejs-log]
                file = `{"Fn::FindInMap":["CWLogs", "WebNodeLogGroup", "LogFile"]}`
                log_group_name = `{ "Ref" : "LGNodeInfo" }`
                log_stream_name = {instance_id}
                [nodejs-info]
                file = `{"Fn::FindInMap":["CWLogs", "WebNodeInfoLogGroup", "LogFile"]}`
                log_group_name = `{ "Ref" : "LGNodeInfo" }`
                log_stream_name = {instance_id}
                [database]
                file = `{"Fn::FindInMap":["CWLogs", "WebDatabaseLogGroup", "LogFile"]}`
                log_group_name = `{ "Ref" : "LGDatabase" }`
                log_stream_name = {instance_id}
              mode  : "000400"
              owner : root
              group : root


      
  #######################################
  ## Cloudwatch Logs Metric Filters

  AWSEBCWLQueryDurationMetricFilter :
    Type : "AWS::Logs::MetricFilter"
    Properties :
      LogGroupName: { "Ref" : "LGDatabase" }
      FilterPattern : {"Fn::FindInMap":["CWLogs", "Extractions", "QueryDurationValueExtraction"]}
      MetricTransformations :
        - MetricValue : "$.params.time"
          MetricNamespace: {"Fn::Join":["/", ["ElasticBeanstalk", {"Ref":"AWSEBEnvironmentName"}]]}
          MetricName : CWLQueryDuration

  AWSEBCWLHttp4xxMetricFilter :
    Type : "AWS::Logs::MetricFilter"
    Properties :
      LogGroupName: { "Ref" : "LGAccess" }
      FilterPattern : {"Fn::FindInMap":["CWLogs", "FilterPatterns", "Http4xxMetricFilter"]}
      MetricTransformations :
        - MetricValue : 1
          MetricNamespace: {"Fn::Join":["/", ["ElasticBeanstalk", {"Ref":"AWSEBEnvironmentName"}]]}
          MetricName : CWLHttp4xx

  AWSEBCWLHttpNon4xxMetricFilter :
    Type : "AWS::Logs::MetricFilter"
    DependsOn : AWSEBCWLHttp4xxMetricFilter
    Properties :
      LogGroupName: { "Ref" : "LGAccess" }
      FilterPattern : {"Fn::FindInMap":["CWLogs", "FilterPatterns", "HttpNon4xxMetricFilter"]}
      MetricTransformations :
        - MetricValue : 0
          MetricNamespace: {"Fn::Join":["/", ["ElasticBeanstalk", {"Ref":"AWSEBEnvironmentName"}]]}
          MetricName : CWLHttp4xx

  AWSEBCWLHttp5xxMetricFilter :
    Type : "AWS::Logs::MetricFilter"
    Properties :
      LogGroupName: { "Ref" : "LGAccess" }
      FilterPattern : {"Fn::FindInMap":["CWLogs", "FilterPatterns", "Http5xxMetricFilter"]}
      MetricTransformations :
        - MetricValue : 1
          MetricNamespace: {"Fn::Join":["/", ["ElasticBeanstalk", {"Ref":"AWSEBEnvironmentName"}]]}
          MetricName : CWLHttp5xx

  AWSEBCWLNodeErrorMetricFilter:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      LogGroupName: { "Ref" : "LGNodeInfo" }
      FilterPattern: {"Fn::FindInMap":["CWLogs", "FilterPatterns", "NodeErrorMetricFilter"]}
      MetricTransformations :
        - MetricValue : 1
          MetricNamespace: {"Fn::Join":["/", ["ElasticBeanstalk", {"Ref":"AWSEBEnvironmentName"}]]}
          MetricName : CWLNodeError

  


  ######################################################
  ## Alarms
  AWSEBCWLNodeErrorCountAlarm :
    Type: "AWS::CloudWatch::Alarm"
    DependsOn: AWSEBCWLNodeErrorMetricFilter
    Properties :
      AlarmDescription: "Error occurred in application"
      AlarmName: {"Fn::Join":[" - ", [{"Ref":"AWSEBEnvironmentName"}, "Node Error"]]}
      MetricName: CWLNodeError
      Namespace: {"Fn::Join":["/", ["ElasticBeanstalk", {"Ref":"AWSEBEnvironmentName"}]]}
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      AlarmActions:
        - "Fn::If":
            - SNSTopicExists
            - "Fn::FindInMap":
                - AWSEBOptions
                - options
                - EBSNSTopicArn
            - { "Ref" : "AWS::NoValue" }

  AWSEBCWLHttp5xxCountAlarm :
    Type : "AWS::CloudWatch::Alarm"
    DependsOn : AWSEBCWLHttp5xxMetricFilter
    Properties :
      AlarmDescription: "Application is returning too many 5xx responses (count too high)."
      AlarmName: {"Fn::Join":[" - ", [{"Ref":"AWSEBEnvironmentName"}, "5xx response count to high"]]}
      MetricName: CWLHttp5xx
      Namespace: {"Fn::Join":["/", ["ElasticBeanstalk", {"Ref":"AWSEBEnvironmentName"}]]}
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 2
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      AlarmActions:
        - "Fn::If":
            - SNSTopicExists
            - "Fn::FindInMap":
                - AWSEBOptions
                - options
                - EBSNSTopicArn
            - { "Ref" : "AWS::NoValue" }

